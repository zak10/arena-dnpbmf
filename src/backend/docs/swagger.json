{
  "openapi": "3.0.3",
  "info": {
    "title": "Arena MVP API",
    "version": "1.0.0",
    "description": "API documentation for the Arena software evaluation platform"
  },
  "servers": [
    {
      "url": "/api/v1",
      "description": "API Version 1"
    }
  ],
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "paths": {
    "/auth/magic-link": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Request magic link authentication",
        "description": "Send a secure magic link for passwordless authentication",
        "operationId": "createMagicLink",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MagicLinkRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Magic link sent successfully",
            "headers": {
              "X-Request-ID": {
                "$ref": "#/components/headers/RequestID"
              },
              "X-RateLimit-Remaining": {
                "$ref": "#/components/headers/RateLimitRemaining" 
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "429": {
            "$ref": "#/components/responses/TooManyRequests"
          }
        }
      },
      "get": {
        "tags": ["Authentication"],
        "summary": "Verify magic link token",
        "description": "Verify and authenticate using magic link token",
        "operationId": "verifyMagicLink",
        "parameters": [
          {
            "name": "token",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Magic link verification token"
          }
        ],
        "responses": {
          "200": {
            "description": "Authentication successful",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "description": "Session cookie"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/auth/google": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Authenticate with Google OAuth",
        "description": "Complete Google OAuth authentication flow",
        "operationId": "googleAuth",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GoogleAuthRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Authentication successful",
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string"
                },
                "description": "Session cookie"
              }
            },
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserProfile"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/requests": {
      "post": {
        "tags": ["Requests"],
        "summary": "Create software evaluation request",
        "description": "Create a new request with requirements and optional documents",
        "operationId": "createRequest",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/CreateRequestRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Request created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Request"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      },
      "get": {
        "tags": ["Requests"],
        "summary": "List requests",
        "description": "Get list of authenticated user's requests",
        "operationId": "listRequests",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": ["draft", "submitted", "in_review", "completed", "cancelled"]
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            }
          },
          {
            "name": "per_page",
            "in": "query", 
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 100,
              "default": 20
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of requests",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Request"
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/requests/{requestId}": {
      "get": {
        "tags": ["Requests"],
        "summary": "Get request details",
        "description": "Get detailed information about a specific request",
        "operationId": "getRequest",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Request details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Request"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "tags": ["Requests"],
        "summary": "Update request",
        "description": "Update an existing request in draft status",
        "operationId": "updateRequest",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "requestId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRequestRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Request updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Request"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MagicLinkRequest": {
        "type": "object",
        "required": ["email"],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "Business email address"
          }
        }
      },
      "GoogleAuthRequest": {
        "type": "object",
        "required": ["auth_code"],
        "properties": {
          "auth_code": {
            "type": "string",
            "description": "Google OAuth authorization code"
          }
        }
      },
      "UserProfile": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "readOnly": true
          },
          "full_name": {
            "type": "string",
            "maxLength": 255
          },
          "company": {
            "type": "string",
            "maxLength": 255
          },
          "role": {
            "type": "string",
            "enum": ["buyer", "arena_staff"],
            "readOnly": true
          }
        }
      },
      "CreateRequestRequest": {
        "type": "object",
        "required": ["raw_requirements"],
        "properties": {
          "raw_requirements": {
            "type": "string",
            "maxLength": 10000,
            "description": "Raw requirements text"
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "maxItems": 5,
            "description": "Supporting documents (PDF, DOC, DOCX, XLS, XLSX)"
          }
        }
      },
      "UpdateRequestRequest": {
        "type": "object",
        "properties": {
          "raw_requirements": {
            "type": "string",
            "maxLength": 10000
          },
          "documents": {
            "type": "array",
            "items": {
              "type": "string",
              "format": "binary"
            },
            "maxItems": 5
          }
        }
      },
      "Request": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "status": {
            "type": "string",
            "enum": ["draft", "submitted", "in_review", "completed", "cancelled"]
          },
          "raw_requirements": {
            "type": "string",
            "writeOnly": true
          },
          "parsed_requirements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ParsedRequirement"
            },
            "readOnly": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          }
        }
      },
      "ParsedRequirement": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": ["functional", "technical", "security", "compliance"]
          },
          "description": {
            "type": "string",
            "maxLength": 1000
          },
          "is_mandatory": {
            "type": "boolean",
            "default": true
          },
          "confidence": {
            "type": "number",
            "minimum": 0,
            "maximum": 1
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "responses": {
      "BadRequest": {
        "description": "Invalid request parameters",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "object"
                }
              }
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Authentication required or failed",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "NotFound": {
        "description": "Resource not found",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "TooManyRequests": {
        "description": "Rate limit exceeded",
        "headers": {
          "Retry-After": {
            "schema": {
              "type": "integer"
            },
            "description": "Number of seconds to wait before retrying"
          }
        },
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "retry_after": {
                  "type": "integer"
                }
              }
            }
          }
        }
      }
    },
    "headers": {
      "RequestID": {
        "schema": {
          "type": "string"
        },
        "description": "Unique request identifier for tracing"
      },
      "RateLimitRemaining": {
        "schema": {
          "type": "integer"
        },
        "description": "Number of remaining requests in the current time window"
      }
    }
  }
}