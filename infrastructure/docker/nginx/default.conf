# Version: nginx/1.24.0
# Purpose: Advanced server block configuration for Arena web application

# Upstream configuration for React web application with health checks
upstream web {
    server web:3000 max_fails=3 fail_timeout=30s weight=1;
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
    health_check interval=5s fails=3 passes=2;
}

# Upstream configuration for Django API with health monitoring
upstream api {
    server api:8000 max_fails=3 fail_timeout=30s weight=1;
    keepalive 32;
    keepalive_requests 100;
    keepalive_timeout 60s;
    health_check interval=5s fails=3 passes=2;
}

# Rate limiting zones for API requests
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_conn_zone $binary_remote_addr zone=addr:10m;

# HTTP server for SSL redirect
server {
    listen 80;
    server_name _;
    
    # Redirect all HTTP traffic to HTTPS
    return 301 https://$host$request_uri;
    
    # HTTP access and error logging
    access_log /var/log/nginx/http_access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/http_error.log warn;
}

# HTTPS server configuration
server {
    listen 443 ssl http2;
    server_name _;
    
    # Include SSL configuration
    include /etc/nginx/ssl.conf;
    
    # Root directory for static files
    root /usr/share/nginx/html;
    index index.html;
    
    # Maximum upload size
    client_max_body_size 10M;
    
    # API proxy configuration
    location /api/ {
        proxy_pass http://api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Request-ID $request_id;
        proxy_cache_bypass $http_upgrade;
        
        # Timeouts
        proxy_read_timeout 90s;
        proxy_connect_timeout 90s;
        proxy_send_timeout 90s;
        
        # Buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Rate limiting
        limit_req zone=api_limit burst=20 nodelay;
        limit_conn addr 10;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection '1; mode=block' always;
        add_header Referrer-Policy strict-origin-when-cross-origin always;
    }
    
    # WebSocket proxy configuration
    location /ws/ {
        proxy_pass http://api;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Request-ID $request_id;
        proxy_cache_bypass $http_upgrade;
        
        # Extended timeouts for WebSocket connections
        proxy_read_timeout 86400s;
        proxy_send_timeout 86400s;
        
        # Buffer settings
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # React application configuration
    location / {
        try_files $uri $uri/ /index.html;
        
        # Caching headers
        expires 1h;
        add_header Cache-Control 'public, no-transform';
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection '1; mode=block' always;
        add_header Referrer-Policy strict-origin-when-cross-origin always;
    }
    
    # Static files configuration
    location /static/ {
        expires 1y;
        add_header Cache-Control 'public, no-transform';
        access_log off;
        
        # Security headers
        add_header X-Frame-Options DENY always;
        add_header X-Content-Type-Options nosniff always;
    }
    
    # Error pages
    error_page 404 /404.html;
    error_page 500 502 503 504 /500.html;
    
    # Access and error logging
    access_log /var/log/nginx/access.log combined buffer=512k flush=1m;
    error_log /var/log/nginx/error.log warn;
}